---
openapi: 3.0.3
info:
  title: Security Token Service Management API
  description: Security Token Service (STS) Management API is an API for managing STS configurations.
  version: 0.0.1

tags:
  - name: Issuers
    description: Operations on Issuers
  - name: OAuthClients
    description: Operations on OAuth Clients
  - name: Users
    description: Operations on Users
  - name: Groups
    description: Operations on Groups

paths:
  /api/v1/owners/{ownerID}/issuers:
    get:
      summary: Gets issuers by owner id
      operationId: ListOwnerIssuers
      tags:
        - Issuers
      parameters:
        - $ref: '#/components/parameters/ownerID'
        - $ref: '#/components/parameters/pageCursor'
        - $ref: '#/components/parameters/pageLimit'
      responses:
        '200':
          $ref: '#/components/responses/IssuerCollection'
    post:
      tags:
        - Issuers
      summary: Creates an issuer.
      operationId: createIssuer
      parameters:
        - in: path
          name: ownerID
          required: true
          description: ID of owner to create issuer in
          schema:
            type: string
            x-go-type: gidx.PrefixedID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIssuer'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issuer'

  /api/v1/owners/{ownerID}/clients:
    get:
      summary: Gets oauth clients by owner id
      operationId: GetOwnerOAuthClients
      tags:
        - OAuthClients
      parameters:
        - $ref: '#/components/parameters/ownerID'
        - $ref: '#/components/parameters/pageCursor'
        - $ref: '#/components/parameters/pageLimit'
      responses:
        '200':
          $ref: '#/components/responses/OAuthClientCollection'
    post:
      tags:
        - OAuthClients
      summary: Creates an OAuth client.
      operationId: createOAuthClient
      description: Creates an OAuth client for the given owner.
      parameters:
        - in: path
          name: ownerID
          required: true
          description: Owner to provision the OAuth client under
          schema:
            type: string
            x-go-type: gidx.PrefixedID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOAuthClient'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthClient'

  /api/v1/owners/{ownerID}/groups:
    get:
      tags:
        - Groups
      summary: List all groups for an owner.
      description: List all groups for an owner.
      operationId: listGroups
      parameters:
        - $ref: '#/components/parameters/ownerID'
        - $ref: '#/components/parameters/pageCursor'
        - $ref: '#/components/parameters/pageLimit'
      responses:
        '200':
          $ref: '#/components/responses/GroupCollection'

    post:
      tags:
        - Groups
      summary: Creates a Group
      description: Creates a group under the given owner.
      operationId: createGroup
      parameters:
        - $ref: '#/components/parameters/ownerID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroup'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'

  /api/v1/clients/{clientID}:
    get:
      tags:
        - OAuthClients
      summary: Gets information about an OAuth 2.0 Client.
      operationId: getOAuthClient
      parameters:
        - in: path
          name: clientID
          required: true
          description: OAuth client ID
          schema:
            type: string
            x-go-type: gidx.PrefixedID
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthClient'
    delete:
      tags:
        - OAuthClients
      summary: Deletes an OAuth Client
      operationId: deleteOAuthClient
      parameters:
        - in: path
          name: clientID
          required: true
          description: OAuth client ID
          schema:
            type: string
            x-go-type: gidx.PrefixedID
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'

  /api/v1/issuers/{id}:
    get:
      tags:
        - Issuers
      summary: Gets an issuer by ID.
      operationId: getIssuerByID
      parameters:
        - in: path
          name: id
          required: true
          description: ID of issuer to get
          schema:
            type: string
            x-go-type: gidx.PrefixedID
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issuer'

    patch:
      tags:
        - Issuers
      summary: Updates an issuer.
      operationId: updateIssuer
      parameters:
        - in: path
          name: id
          required: true
          description: ID of issuer to update
          schema:
            type: string
            x-go-type: gidx.PrefixedID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssuerUpdate'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issuer'

    delete:
      tags:
        - Issuers
      summary: Deletes an issuer with the given ID.
      operationId: deleteIssuer
      parameters:
        - in: path
          name: id
          required: true
          description: ID of issuer to delete
          schema:
            type: string
            x-go-type: gidx.PrefixedID
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'

  /api/v1/issuers/{id}/users:
    get:
      summary: Gets users by issuer id
      operationId: GetIssuerUsers
      tags:
        - Issuers
      parameters:
        - $ref: '#/components/parameters/issuerID'
        - $ref: '#/components/parameters/pageCursor'
        - $ref: '#/components/parameters/pageLimit'
      responses:
        '200':
          $ref: '#/components/responses/UserCollection'

  /api/v1/users/{userID}:
    get:
      tags:
        - Users
      summary: Gets information about a User.
      operationId: getUserByID
      parameters:
        - in: path
          name: userID
          required: true
          description: User ID
          schema:
            type: string
            x-go-type: gidx.PrefixedID
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /api/v1/users/{userID}/groups:
    get:
      tags:
        - Users
      summary: Lists groups by user id
      description: Lists groups by user id.
      operationId: ListUserGroups
      parameters:
        - in: path
          name: userID
          required: true
          description: User ID
          schema:
            type: string
            x-go-type: gidx.PrefixedID
        - $ref: '#/components/parameters/pageCursor'
        - $ref: '#/components/parameters/pageLimit'
      responses:
        '200':
          $ref: '#/components/responses/GroupIDCollection'

  /api/v1/groups/{groupID}:
    delete:
      tags:
        - Groups
      summary: Deletes a Group
      description: Deletes a group by ID.
      operationId: deleteGroup
      parameters:
        - $ref: '#/components/parameters/groupID'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
    patch:
      tags:
        - Groups
      summary: Updates a Group
      description: Updates a group by ID, only name and description can be updated.
      operationId: updateGroup
      parameters:
        - $ref: '#/components/parameters/groupID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroup'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
    get:
      tags:
        - Groups
      summary: Gets information about a Group.
      operationId: getGroupByID
      description: Gets a group by ID.
      parameters:
        - $ref: '#/components/parameters/groupID'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'

  /api/v1/groups/{groupID}/members:
    get:
      tags:
        - Groups
      summary: Gets members of a Group
      description: Gets the members of a group by ID.
      operationId: listGroupMembers
      parameters:
        - $ref: '#/components/parameters/groupID'
        - $ref: '#/components/parameters/pageCursor'
        - $ref: '#/components/parameters/pageLimit'
      responses:
        '200':
          $ref: '#/components/responses/GroupMemberCollection'
    put:
      tags:
        - Groups
      summary: Replaces members of a Group
      description: Replaces the members of a group by ID.
      operationId: replaceGroupMembers
      parameters:
        - $ref: '#/components/parameters/groupID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddGroupMembers'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddGroupMembersResponse'
    post:
      tags:
        - Groups
      summary: Adds a member to a Group
      description: Adds a member to a group by ID.
      operationId: addGroupMembers
      parameters:
        - $ref: '#/components/parameters/groupID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddGroupMembers'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddGroupMembersResponse'

  /api/v1/groups/{groupID}/members/{subjectID}:
    delete:
      tags:
        - Groups
      summary: Removes a member from a Group
      description: Removes a member from a group by their ID.
      operationId: removeGroupMember
      parameters:
        - $ref: '#/components/parameters/groupID'
        - $ref: '#/components/parameters/subjectID'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'

components:
  schemas:
    DeleteResponse:
      required:
        - success
      properties:
        success:
          type: boolean
          description: Always true.

    CreateIssuer:
      required:
        - name
        - uri
        - jwks_uri
      properties:
        name:
          type: string
          description: A human-readable name for the issuer
        uri:
          x-go-name: URI
          type: string
          description: URI for the issuer. Must match the "iss" claim value in incoming JWTs
        jwks_uri:
          x-go-name: JWKSURI
          type: string
          description: JWKS URI
        claim_mappings:
          type: object
          description: CEL expressions mapping token claims to other claims
          additionalProperties:
            type: string
        claim_conditions:
          type: string
          description: |
            A CEL expressions to restrict authentication to a subset of identities
            whose claims must match the expressions. By default all identities
            issued by the issuer are allowed to authenticate

    IssuerUpdate:
      properties:
        name:
          type: string
          description: A human-readable name for the issuer
        uri:
          x-go-name: URI
          type: string
          description: URI for the issuer. Must match the "iss" claim value in incoming JWTs
        jwks_uri:
          x-go-name: JWKSURI
          type: string
          description: JWKS URI
        claim_mappings:
          type: object
          description: CEL expressions mapping token claims to other claims
          additionalProperties:
            type: string
        claim_conditions:
          type: string
          description: |
            A CEL expressions to restrict authentication to a subset of identities
            whose claims must match the expressions. By default all identities
            issued by the issuer are allowed to authenticate

    Issuer:
      required:
        - id
        - name
        - uri
        - jwks_uri
        - claim_mappings
        - claim_conditions
      properties:
        id:
          x-go-name: ID
          type: string
          x-go-type: gidx.PrefixedID
          description: ID of the issuer
        name:
          type: string
          description: A human-readable name for the issuer
        uri:
          x-go-name: URI
          type: string
          description: URI for the issuer. Must match the "iss" claim value in incoming JWTs
        jwks_uri:
          x-go-name: JWKSURI
          type: string
          description: JWKS URI
        claim_mappings:
          type: object
          description: CEL expressions mapping token claims to other claims
          additionalProperties:
            type: string
        claim_conditions:
          type: string
          description: |
            A CEL expressions to restrict authentication to a subset of identities
            whose claims must match the expressions. By default all identities
            issued by the issuer are allowed to authenticate

    CreateOAuthClient:
      required:
        - name
      properties:
        name:
          type: string
          description: A human-readable name for the client
        audience:
          description: Audiences that this client can request
          type: array
          items:
            type: string

    OAuthClient:
      required:
        - id
        - name
        - audience
      properties:
        id:
          x-go-name: ID
          type: string
          x-go-type: gidx.PrefixedID
          description: OAuth 2.0 Client ID
        name:
          type: string
          description: Description of Client
        secret:
          type: string
          description: OAuth2.0 Client Secret
        audience:
          type: array
          items:
            type: string
          description: Grantable audiences

    User:
      required:
        - id
        - iss
        - sub
      properties:
        id:
          x-go-name: ID
          type: string
          x-go-type: gidx.PrefixedID
          description: OAuth 2.0 User ID
        name:
          type: string
          description: Name of the user
        email:
          type: string
          description: Email of the user
        iss:
          x-go-name: Issuer
          type: string
          description: OAuth 2.0 Issuer of the user
        sub:
          x-go-name: Subject
          type: string
          description: OAuth 2.0 Subject for the user

    Pagination:
      description: collection response pagination
      type: object
      required:
        - limit
      properties:
        limit:
          type: integer
          description: the limit used for the collection response
          example: 10
          x-order: 1
        next:
          type: string
          description: the cursor for the next page
          example: aWQ9ZXhhbXBsZS1hZnRlci10aGlzLWlk
          x-go-type: crdbx.Cursor
          x-go-type-import:
            path: go.infratographer.com/identity-api/internal/crdbx

    CreateGroup:
      required:
        - name
      properties:
        name:
          type: string
          description: a name for the group
        description:
          type: string
          description: a description for the group

    UpdateGroup:
      properties:
        name:
          type: string
          description: a name for the group
        description:
          type: string
          description: a description for the group

    Group:
      required:
        - id
        - name
        - owner
      properties:
        id:
          x-go-name: ID
          type: string
          x-go-type: gidx.PrefixedID
          description: ID of the group
        name:
          type: string
          description: a name for the group
        description:
          type: string
          description: a description for the group
        owner_id:
          x-go-name: OwnerID
          type: string
          x-go-type: gidx.PrefixedID
          description: ID of the owner of the group

    AddGroupMembers:
      required:
        - member_ids
      properties:
        member_ids:
          type: array
          x-go-name: MemberIDs
          items:
            type: string
            x-go-type: gidx.PrefixedID
          description: IDs of the members to add to the group

    AddGroupMembersResponse:
      required:
        - success 
      properties:
        success:
          type: boolean
          description: true if the members were added successfully

  parameters:
    ownerID:
      description: id of a resource owner
      in: path
      name: ownerID
      x-go-name: OwnerID
      required: true
      schema:
        type: string
        x-go-type: gidx.PrefixedID
        x-go-type-import:
          path: go.infratographer.com/x/gidx
    issuerID:
      description: id of an issuer
      in: path
      name: id
      x-go-name: IssuerID
      required: true
      schema:
        type: string
        x-go-type: gidx.PrefixedID
        x-go-type-import:
          path: go.infratographer.com/x/gidx
    groupID:
      description: id of a group
      in: path
      name: groupID
      x-go-name: GroupID
      required: true
      schema:
        type: string
        x-go-type: gidx.PrefixedID
        x-go-type-import:
          path: go.infratographer.com/x/gidx
    subjectID:
      description: id of a subject
      in: path
      name: subjectID
      x-go-name: SubjectID
      required: true
      schema:
        type: string
        x-go-type: gidx.PrefixedID
        x-go-type-import:
          path: go.infratographer.com/x/gidx
    pageCursor:
      description: the cursor to the results to return
      in: query
      name: cursor
      required: false
      schema:
        type: string
        x-go-type: crdbx.Cursor
        x-go-type-import:
          path: go.infratographer.com/identity-api/internal/crdbx
      x-oapi-codegen-extra-tags:
        query: "cursor"
    pageLimit:
      description: limits the response collections
      in: query
      name: limit
      required: false
      schema:
        type: integer
      x-oapi-codegen-extra-tags:
        query: "limit"

  responses:
    IssuerCollection:
      description: a collection of issuers
      content:
        application/json:
          schema:
            type: object
            required:
              - issuers
              - pagination
            properties:
              issuers:
                type: array
                items:
                  $ref: '#/components/schemas/Issuer'
              pagination:
                $ref: '#/components/schemas/Pagination'
    OAuthClientCollection:
      description: a collection of OAuth Clients
      content:
        application/json:
          schema:
            type: object
            required:
              - clients
              - pagination
            properties:
              clients:
                type: array
                items:
                  $ref: '#/components/schemas/OAuthClient'
              pagination:
                $ref: '#/components/schemas/Pagination'
    UserCollection:
      description: a collection of users
      content:
        application/json:
          schema:
            type: object
            required:
              - users
              - pagination
            properties:
              users:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              pagination:
                $ref: '#/components/schemas/Pagination'
    GroupCollection:
      description: a collection of groups
      content:
        application/json:
          schema:
            type: object
            required:
              - groups
              - pagination
            properties:
              groups:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
              pagination:
                $ref: '#/components/schemas/Pagination'
    GroupIDCollection:
      description: a collection of group ids
      content:
        application/json:
          schema:
            type: object
            required:
              - group_ids
              - pagination
            properties:
              group_ids:
                type: array
                x-go-name: GroupIDs
                items:
                  type: string
                  x-go-type: gidx.PrefixedID
                  x-go-type-import:
              pagination:
                $ref: '#/components/schemas/Pagination'
    GroupMemberCollection:
      description: a collection of group members
      content:
        application/json:
          schema:
            type: object
            required:
              - member_ids
              - group_id
              - pagination
            properties:
              group_id:
                type: string
                x-go-name: GroupID
                x-go-type: gidx.PrefixedID
                x-go-type-import:
                  path: go.infratographer.com/x/gidx
              member_ids:
                type: array
                x-go-name: MemberIDs
                items:
                  type: string
                  x-go-type: gidx.PrefixedID
                  x-go-type-import:
                    path: go.infratographer.com/x/gidx
              pagination:
                $ref: '#/components/schemas/Pagination'
