---
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    {{- with .Values.deployment.extraLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.deployment.extraAnnotations }}
  annotations:
    {{ toYaml . | nindent 4 }}
  {{- end }}
  name: {{ template "common.names.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  revisionHistoryLimit: 3
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
        {{- with .Values.deployment.extraLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.deployment.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      {{- with .Values.deployment.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: copy-keys
          image: "{{ .Values.copyKeys.repository }}:{{ .Values.copyKeys.tag }}"
          imagePullPolicy: {{ .Values.copyKeys.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - "cp -f /sts-keys/* /keys/; chown {{ .Values.deployment.containerUserID }} /keys/*"
          {{- with .Values.deployment.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: signing-keys-seed
              mountPath: /sts-keys/
            - name: signing-keys
              mountPath: /keys/
        {{- if .Values.config.storage.migrateOnInit }}
        - name: db-migrate
          {{- with .Values.config.storage.crdb.uriSecretName }}
          envFrom:
            - secretRef:
                name: "{{ . }}"
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "Always" }}
          args:
            - migrate
          {{- with .Values.deployment.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: app-config
              mountPath: /etc/identity-api/
          {{- if .Values.config.storage.crdb.caSecretName }}
            - name: crdb-ca
              mountPath: "{{ .Values.config.storage.crdb.certMountPath }}"
          {{- end }}
        {{- end }}
        {{- if .Values.config.audit.enabled }}
        - name: init-audit-logs
          image: {{ .Values.audit.image.repository }}:{{ .Values.audit.image.tag }}
          imagePullPolicy: {{ .Values.audit.image.pullPolicy }}
          args:
            - 'init'
            - '-f'
            - '/app-audit/audit.log'
          {{- with .Values.audit.initContainer.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /app-audit
              name: audit-logs
        {{- end }}
      containers:
        - name: {{ include "common.names.name" . }}
          envFrom:
            - secretRef:
                name: "{{ .Values.config.oauth.secretName }}"
            {{- with .Values.config.storage.crdb.uriSecretName }}
            - secretRef:
                name: "{{ . }}"
            {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "Always" }}
          volumeMounts:
            - name: signing-keys
              mountPath: /keys/
              readOnly: true
            - name: app-config
              mountPath: /etc/identity-api/
          {{- if .Values.config.storage.crdb.caSecretName }}
            - name: crdb-ca
              mountPath: "{{ .Values.config.storage.crdb.certMountPath }}"
          {{- end }}
          {{- if .Values.config.audit.enabled }}
            - name: audit-logs
              mountPath: /app-audit
          {{- end }}
          ports:
            - name: web
              containerPort: {{ include "idapi.listenPort" . }}
          livenessProbe:
            httpGet:
              path: /livez
              port: web
            initialDelaySeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /readyz
              port: web
            initialDelaySeconds: 5
            timeoutSeconds: 5
          {{- with .Values.deployment.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- if .Values.config.audit.enabled }}
        - name: audit-logger
          image: {{ .Values.audit.image.repository }}:{{ .Values.audit.image.tag }}
          imagePullPolicy: {{ .Values.audit.image.pullPolicy }}
          args:
            - '-f'
            - '/app-audit/audit.log'
          volumeMounts:
            - mountPath: /app-audit
              name: audit-logs
              readOnly: true
          {{- with .Values.audit.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
      volumes:
        - name: signing-keys-seed
          secret:
            secretName: "{{ .Values.config.oauth.privateKeys.secretName }}"
            defaultMode: 0400
        - name: signing-keys
          emptyDir:
        - name: app-config
          configMap:
            name: {{ include "common.names.name" . }}-app-config
        {{- with .Values.config.storage.crdb.caSecretName }}
        - name: crdb-ca
          secret:
            secretName: "{{ . }}"
        {{- end }}
        {{- if .Values.config.audit.enabled }}
        - name: audit-logs
          emptyDir: {}
        {{- end }}
